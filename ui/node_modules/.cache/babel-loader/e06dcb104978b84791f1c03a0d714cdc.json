{"ast":null,"code":"var _jsxFileName = \"/Users/cybyljade/Desktop/SupraCoders/capstone/sdi-capstone-team2-reach/ui/src/components/Dashboard/NotificationDialogButton.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport config from '../../config';\nimport { AppContext } from '../../AppContext';\nimport { IconButton, Badge, Card } from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ApiUrl = config[process.env.REACT_APP_NODE_ENV || \"development\"].apiUrl;\nexport default function NotificationDialogButton() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [numNotifications, setNumNotifications] = React.useState(0);\n  const {\n    values\n  } = React.useContext(AppContext);\n  const [mhpmessages, setMhpmessages] = React.useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    fetch(ApiUrl + `/mhpmessages/members/${values.currentUser.id}`).then(res => res.json()).then(data => {\n      let temp = data.filter(e => {\n        return e.members_id_to === values.currentUser.id;\n      });\n      console.log('mhp messages fetched ', data);\n      console.log('mhp messages filtered ', temp);\n      setMhpmessages(temp);\n      setNumNotifications(temp.length);\n    });\n  }, []);\n\n  if (mhpmessages.length <= 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: () => {\n          handleClickOpen();\n        },\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: numNotifications,\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"MHP Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"No Received Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: () => {\n          handleClickOpen();\n        },\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: numNotifications,\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"MHP Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: mhpmessages.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                marginBottom: '2%',\n                backgroundColor: '#25383C'\n              },\n              children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                sx: {\n                  color: 'white'\n                },\n                onClick: () => {\n                  const init = {\n                    method: 'DELETE',\n                    headers: {\n                      'Content-Type': 'application/json;charset=utf-8'\n                    }\n                  };\n                  fetch(ApiUrl + `/mhpmessages/${e.id}`, init).then(res => res.json()).then(data => {\n                    console.log(data);\n                    console.log('mhp messages fetched ', data);\n                    let front = mhpmessages.slice(0, i);\n                    let end = mhpmessages.slice(i + 1, mhpmessages.length);\n                    setMhpmessages(front.concat(end));\n                    setNumNotifications(numNotifications - 1);\n                  });\n                },\n                children: [e.comment, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(NotificationDialogButton, \"R/o4lTlsTuJ80qs2QMkOrQJNLHU=\");\n\n_c = NotificationDialogButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDialogButton\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","config","AppContext","IconButton","Badge","Card","NotificationsIcon","ApiUrl","process","env","REACT_APP_NODE_ENV","apiUrl","NotificationDialogButton","open","setOpen","useState","numNotifications","setNumNotifications","values","useContext","mhpmessages","setMhpmessages","handleClickOpen","handleClose","useEffect","fetch","currentUser","id","then","res","json","data","temp","filter","e","members_id_to","console","log","length","map","i","marginBottom","backgroundColor","color","init","method","headers","front","slice","end","concat","comment"],"sources":["/Users/cybyljade/Desktop/SupraCoders/capstone/sdi-capstone-team2-reach/ui/src/components/Dashboard/NotificationDialogButton.jsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport config from '../../config';\nimport { AppContext } from '../../AppContext';\nimport { IconButton, Badge, Card } from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\n\nconst ApiUrl = config[process.env.REACT_APP_NODE_ENV || \"development\"].apiUrl;\n\nexport default function NotificationDialogButton() {\n  const [open, setOpen] = React.useState(false);\n  const [numNotifications, setNumNotifications] = React.useState(0);\n  const {values} = React.useContext(AppContext);\n  const [mhpmessages, setMhpmessages] = React.useState([]);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  React.useEffect(()=>{\n    fetch(ApiUrl+`/mhpmessages/members/${values.currentUser.id}`)\n    .then(res=>res.json())\n    .then(data => {\n      let temp = data.filter((e) => {\n        return e.members_id_to === values.currentUser.id;\n      })\n      console.log('mhp messages fetched ', data)\n      console.log('mhp messages filtered ', temp)\n      setMhpmessages(temp);\n      setNumNotifications(temp.length)\n\n    })\n  },[])\n\n  if(mhpmessages.length <= 0)\n  {\n    return (\n      <>\n        <IconButton color=\"inherit\" onClick={() => {handleClickOpen()}}>\n          <Badge badgeContent={numNotifications} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>MHP Notifications</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              No Received Messages\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Close</Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }else {\n    return (\n      <>\n        <IconButton color=\"inherit\" onClick={() => {handleClickOpen()}}>\n          <Badge badgeContent={numNotifications} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle>MHP Notifications</DialogTitle>\n          <DialogContent>\n            {\n              mhpmessages.map((e, i)=>{\n                return (\n                <Card key={e.id} sx={{marginBottom: '2%', backgroundColor: '#25383C'}}>\n                  <DialogContentText sx={{color: 'white'}}  onClick={()=>{\n                      const init = {\n                        method: 'DELETE',\n                        headers: {\n                          'Content-Type': 'application/json;charset=utf-8'\n                        }\n                      }\n                      fetch(ApiUrl + `/mhpmessages/${e.id}`, init)\n                      .then(res=>res.json())\n                      .then(data => {\n                        console.log(data);\n                        console.log('mhp messages fetched ', data)\n                        let front = mhpmessages.slice(0, i);\n                        let end = mhpmessages.slice(i + 1, mhpmessages.length);\n                        setMhpmessages(front.concat(end));\n                        setNumNotifications(numNotifications-1)\n                      })\n                    }}>\n                    {e.comment}\n                    <br></br>\n                  </DialogContentText>\n                </Card>\n                )\n              })\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Close</Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}