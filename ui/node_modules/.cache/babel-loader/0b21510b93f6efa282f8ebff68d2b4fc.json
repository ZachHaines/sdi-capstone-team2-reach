{"ast":null,"code":"var _jsxFileName = \"/Users/cybyljade/Desktop/SupraCoders/capstone/sdi-capstone-team2-reach/ui/src/components/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { TextField, Stack, Paper, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../../config';\nimport bcrypt from 'bcryptjs';\nimport { AppContext } from '../../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ApiUrl = config[process.env.REACT_APP_NODE_ENV || \"development\"].apiUrl;\n\nconst LoginPage = () => {\n  _s();\n\n  const nav = useNavigate();\n  const {\n    values,\n    setters\n  } = useContext(AppContext);\n\n  const loginButtonClickHandler = () => {\n    //login logical code\n    const opts = {\n      method: 'POST',\n      //using post since get does not take a body and I find it sloppy to put the username and encrypted password in the browser\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"username\": document.getElementById(\"username\").value\n      })\n    };\n    fetch(ApiUrl + \"/login\", opts) //this will oneday set the user as logged in\n    .then(res => res.json()).then(data => {\n      console.log(\"Here is the data\", data);\n      return data[0]; //this is the value of login status\n    }).then(log => log.username ? log : alert(\"The username/password combination does not exist. If you are a new user, please register.\")).then(user => {\n      console.log(\"Successfully called loggedin\", document.getElementById('password-textfield').value, \"\\nHere is our hashed password\", user.password);\n      bcrypt.compare(document.getElementById('password-textfield').value, user.password, function (err, result) {\n        if (result) {\n          setters.setCurrentUser({ ...user,\n            role: values.roles[user.roles_id - 1]\n          });\n          setTimeout(() => nav('/self-reflection'), 100);\n        } else {\n          console.log(err);\n          alert('Password not correct');\n        }\n\n        if (err) throw err;\n      });\n    }).catch(err => console.log(err));\n  };\n  /*\n      fetch(ApiUrl+'/members/')\n        .then(res => res.json())\n        .then(data => {\n          data.forEach(el =>\n          {\n            if(username === el.username) \n            {\n              fetch(ApiUrl+`/passwords/${el.passwords_id}`)\n                .then(res => res.json())\n                .then(data => \n                {\n                  bcrypt.compare(unhashedPassword, data.password, function(err, result) {\n                    // result == true\n                    if(result) {\n                      nav('/self-reflection')\n                      setters.setCurrentUser(username)\n                      isFound = true;\n                    }\n                 });\n                })\n            }\n          })\n        }).then(()=> {\n          if (!isFound) {\n            alert('The username/password combination does not exist. If you are a new user, please register.')\n          }\n        })\n    }\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: \"login-sheet\",\n      elevation: 10,\n      sx: {\n        width: '60vw',\n        marginLeft: '20vw',\n        marginRight: '20vw',\n        marginTop: '2.5vw'\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: \"column\",\n        sx: {\n          width: '50vw',\n          marginLeft: '5vw',\n          marginRight: '5vw',\n          paddingBottom: '2vw',\n          marginBottom: '5vw'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          align: \"center\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"username\",\n          label: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password-textfield\",\n          label: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loginButtonClickHandler,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '60vw',\n        marginLeft: '20vw',\n        marginRight: '20vw'\n      },\n      elevation: 5,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: \"column\",\n        sx: {\n          width: '50vw',\n          marginLeft: '5vw',\n          marginRight: '5vw',\n          paddingBottom: '2vw'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If you do not have an account, please create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            nav('/signup');\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginPage, \"CEKe/M8XI/FnuSidsKtNvdEuWMk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","TextField","Stack","Paper","Button","Typography","useNavigate","config","bcrypt","AppContext","ApiUrl","process","env","REACT_APP_NODE_ENV","apiUrl","LoginPage","nav","values","setters","loginButtonClickHandler","opts","method","headers","body","JSON","stringify","document","getElementById","value","fetch","then","res","json","data","console","log","username","alert","user","password","compare","err","result","setCurrentUser","role","roles","roles_id","setTimeout","catch","width","marginLeft","marginRight","marginTop","paddingBottom","marginBottom"],"sources":["/Users/cybyljade/Desktop/SupraCoders/capstone/sdi-capstone-team2-reach/ui/src/components/LoginPage/LoginPage.jsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport { TextField, Stack, Paper, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../../config';\nimport bcrypt from 'bcryptjs';\nimport { AppContext } from '../../AppContext';\n\nconst ApiUrl = config[process.env.REACT_APP_NODE_ENV || \"development\"].apiUrl;\n\nconst LoginPage = () => {\n  const nav = useNavigate();\n  const {values, setters} = useContext(AppContext);\n\n  const loginButtonClickHandler = () => {\n \n \n  //login logical code\n   const opts = {\n     method: 'POST',//using post since get does not take a body and I find it sloppy to put the username and encrypted password in the browser\n     headers: {'Content-type': 'application/json'},\n     body: JSON.stringify(\n      {\n        \"username\": document.getElementById(\"username\").value,\n      }),\n   };\n    \n    fetch(ApiUrl+\"/login\",opts)//this will oneday set the user as logged in\n    .then(res => res.json())\n    .then(data => {\n      console.log(\"Here is the data\",data)\n      return data[0]//this is the value of login status\n    })\n    .then((log)=>(log.username)?log:alert(\"The username/password combination does not exist. If you are a new user, please register.\")\n)   .then( (user) =>{\n      console.log(\"Successfully called loggedin\",document.getElementById('password-textfield').value,\"\\nHere is our hashed password\", user.password)\n      bcrypt.compare(document.getElementById('password-textfield').value, user.password, function(err, result) {\n        if(result){\n          setters.setCurrentUser({...user, role: values.roles[user.roles_id-1]})\n          setTimeout(()=>nav('/self-reflection'),100)\n        }else{\n          console.log(err)\n          alert('Password not correct')\n        }\n        if (err) throw err;\n      })\n    })\n    .catch(err => console.log(err))\n    }\n  \n\n\n\n/*\n    fetch(ApiUrl+'/members/')\n      .then(res => res.json())\n      .then(data => {\n        data.forEach(el =>\n        {\n          if(username === el.username) \n          {\n            fetch(ApiUrl+`/passwords/${el.passwords_id}`)\n              .then(res => res.json())\n              .then(data => \n              {\n                bcrypt.compare(unhashedPassword, data.password, function(err, result) {\n                  // result == true\n                  if(result) {\n                    nav('/self-reflection')\n                    setters.setCurrentUser(username)\n                    isFound = true;\n                  }\n               });\n              })\n          }\n        })\n      }).then(()=> {\n        if (!isFound) {\n          alert('The username/password combination does not exist. If you are a new user, please register.')\n        }\n      })\n  }\n*/\n  return (\n    <>\n      <Paper className='login-sheet' elevation={10} sx={{width: '60vw', marginLeft: '20vw', marginRight:'20vw', marginTop: '2.5vw'}}>\n        <Stack spacing={2} direction='column' sx={{width: '50vw', marginLeft: '5vw', marginRight: '5vw', paddingBottom: '2vw', marginBottom: '5vw'}}>\n        <Typography variant='h2' align='center'>Login</Typography>\n          <TextField id='username' label='Username'></TextField>\n          <TextField id='password-textfield' label='Password' type='password'></TextField>\n          <Button onClick={loginButtonClickHandler}>Login</Button>\n        </Stack>\n      </Paper>\n      <Paper sx={{width: '60vw', marginLeft: '20vw', marginRight:'20vw'}} elevation={5} >\n        <Stack spacing={2} direction='column' sx={{width: '50vw', marginLeft: '5vw', marginRight: '5vw', paddingBottom: '2vw'}}>\n          <p>\n            If you do not have an account, please create an account\n          </p>\n          <Button onClick={()=>{nav('/signup')}}>Sign Up</Button>\n        </Stack>\n      </Paper>\n    </>\n  )\n}\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}